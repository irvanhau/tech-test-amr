// Code generated by mockery v2.35.2. DO NOT EDIT.

package mocks

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// TimeInterface is an autogenerated mock type for the TimeInterface type
type TimeInterface struct {
	mock.Mock
}

// NowTime provides a mock function with given fields:
func (_m *TimeInterface) NowTime() time.Time {
	ret := _m.Called()

	var r0 time.Time
	if rf, ok := ret.Get(0).(func() time.Time); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(time.Time)
	}

	return r0
}

// NewTimeInterface creates a new instance of TimeInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTimeInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *TimeInterface {
	mock := &TimeInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
